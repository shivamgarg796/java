Abstract class and interface both are used to achieve abstraction where we can declare the abstract methods. 
Abstract class and interface both can't be instantiated.


1) Abstract class can have abstract and non-abstract methods.	
2) Abstract class doesn't support multiple inheritance.	
3) Abstract class can have final, non-final, static and non-static variables.	
4) Abstract class can provide the implementation of interface.	
5) The abstract keyword is used to declare abstract class.	
6) An abstract class can extend another Java class and implement multiple Java interfaces.
7) An abstract class can be extended using keyword "extends".	
8) A Java abstract class can have class members like private, protected, etc.	
9)In abstract class we can achieve 0-100 % abstraction.

10)Example:
public abstract class Shape{

public abstract void draw();

}



1)Interface can have only abstract methods. Since Java 8, it can have default and static methods also.
2)Interface supports multiple inheritance.Interface has only static and final variables.
3)Interface can't provide the implementation of abstract class.The interface keyword is used to declare interface.
4)An interface can extend another Java interface only.An interface can be implemented using keyword "implements".
5)Members of a Java interface are public by default.
6)In interface we can acheive 100% abstraction.

7)Example:
public interface Drawable{

void draw();
}